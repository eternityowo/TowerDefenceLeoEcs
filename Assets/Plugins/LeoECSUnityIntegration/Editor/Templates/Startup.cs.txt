using Leopotam.Ecs;
using UnityEngine;

namespace #NS# 
{
    sealed class #SCRIPTNAME# : MonoBehaviour 
    {
        EcsWorld world;
        EcsSystems systems;

        void Start () 
        {
            // void can be switched to IEnumerator for support coroutines.
            
            world = new EcsWorld();
            systems = new EcsSystems(world);
#if UNITY_EDITOR
            Leopotam.Ecs.UnityIntegration.EcsWorldObserver.Create(world);
            Leopotam.Ecs.UnityIntegration.EcsSystemsObserver.Create(systems);
#endif
            systems
                // register your systems here, for example:
                // .Add (new TestSystem1())
                // .Add (new TestSystem2())
                
                // register one-frame components (order is important), for example:
                // .OneFrame<TestComponent1>()
                // .OneFrame<TestComponent2>()
                
                // inject service instances here (order doesn't important), for example:
                // .Inject (new CameraService())
                // .Inject (new NavMeshSupport())
                .Init();
        }

        void Update() 
        {
            systems?.Run();
        }

        void OnDestroy() 
        {
            if (systems != null) 
            {
                systems.Destroy();
                systems = null;
                
                world.Destroy();
                world = null;
            }
        }
    }
}